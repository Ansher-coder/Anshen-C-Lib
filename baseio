#define _anshen                                                             // @Copyright (C,C++) Anshen
#ifndef _ansh_baseio
#define _ansh_baseio                                                        _anshen // pragma once
_anshen namespace an {                                                      _anshen // to extends anshenlib
_anshen extern "C++" {                                                      _anshen // to link anshenc++lib-func
_anshen void unsync();                                                      _anshen // to unsynchronize with stdio-io
_anshen void read(int&);                                                    _anshen // link: read
_anshen void read(long&);                                                   _anshen // link: read
_anshen void read(short&);                                                  _anshen // link: read
_anshen void read(long long&);                                              _anshen // link: read
_anshen void read(unsigned int&);                                           _anshen // link: read
_anshen void read(unsigned long&);                                          _anshen // link: read
_anshen void read(unsigned short&);                                         _anshen // link: read
_anshen void read(unsigned long long&);                                     _anshen // link: read
_anshen void read(float&);                                                  _anshen // link: read
_anshen void read(double&);                                                 _anshen // link: read
_anshen void read(__float128&);                                             _anshen // link: read
_anshen void read(long double&);                                            _anshen // link: read
_anshen void read(char&);                                                   _anshen // link: read
_anshen void read(char*);                                                   _anshen // link: read
_anshen void fread(int&);                                                   _anshen // link: faster read
_anshen void fread(long&);                                                  _anshen // link: faster read
_anshen void fread(short&);                                                 _anshen // link: faster read
_anshen void fread(long long&);                                             _anshen // link: faster read
_anshen void fread(unsigned int&);                                          _anshen // link: faster read
_anshen void fread(unsigned long&);                                         _anshen // link: faster read
_anshen void fread(unsigned short&);                                        _anshen // link: faster read
_anshen void fread(unsigned long long&);                                    _anshen // link: faster read
_anshen void fread(float&);                                                 _anshen // link: faster read
_anshen void fread(double&);                                                _anshen // link: faster read
_anshen void fread(__float128&);                                            _anshen // link: faster read
_anshen void fread(long double&);                                           _anshen // link: faster read
_anshen void fread(char&);                                                  _anshen // link: faster read
_anshen void fread(char*);                                                  _anshen // link: faster read
_anshen void sread(int&);                                                   _anshen // link: iostream faster read
_anshen void sread(long&);                                                  _anshen // link: iostream faster read
_anshen void sread(short&);                                                 _anshen // link: iostream faster read
_anshen void sread(long long&);                                             _anshen // link: iostream faster read
_anshen void sread(unsigned int&);                                          _anshen // link: iostream faster read
_anshen void sread(unsigned long&);                                         _anshen // link: iostream faster read
_anshen void sread(unsigned short&);                                        _anshen // link: iostream faster read
_anshen void sread(unsigned long long&);                                    _anshen // link: iostream faster read
_anshen void sread(float&);                                                 _anshen // link: iostream faster read
_anshen void sread(double&);                                                _anshen // link: iostream faster read
_anshen void sread(__float128&);                                            _anshen // link: iostream faster read
_anshen void sread(long double&);                                           _anshen // link: iostream faster read
_anshen void sread(char&);                                                  _anshen // link: iostream faster read
_anshen void sread(char*);                                                  _anshen // link: iostream faster read
_anshen void setprecision(unsigned char);                                   _anshen // set the float-type precision
_anshen void write(int);                                                    _anshen // link: write
_anshen void write(long);                                                   _anshen // link: write
_anshen void write(short);                                                  _anshen // link: write
_anshen void write(long long);                                              _anshen // link: write
_anshen void write(unsigned int);                                           _anshen // link: write
_anshen void write(unsigned long);                                          _anshen // link: write
_anshen void write(unsigned short);                                         _anshen // link: write
_anshen void write(unsigned long long);                                     _anshen // link: write
_anshen void write(float);                                                  _anshen // link: write
_anshen void write(double);                                                 _anshen // link: write
_anshen void write(__float128);                                             _anshen // link: write
_anshen void write(long double);                                            _anshen // link: write
_anshen void write(char);                                                   _anshen // link: write
_anshen void write(char*);                                                  _anshen // link: write
_anshen void write(const char*);                                            _anshen // link: write
_anshen void fwrite(int);                                                   _anshen // link: faster write
_anshen void fwrite(long);                                                  _anshen // link: faster write
_anshen void fwrite(short);                                                 _anshen // link: faster write
_anshen void fwrite(long long);                                             _anshen // link: faster write
_anshen void fwrite(unsigned int);                                          _anshen // link: faster write
_anshen void fwrite(unsigned long);                                         _anshen // link: faster write
_anshen void fwrite(unsigned short);                                        _anshen // link: faster write
_anshen void fwrite(unsigned long long);                                    _anshen // link: faster write
_anshen void fwrite(float);                                                 _anshen // link: faster write
_anshen void fwrite(double);                                                _anshen // link: faster write
_anshen void fwrite(__float128);                                            _anshen // link: faster write
_anshen void fwrite(long double);                                           _anshen // link: faster write
_anshen void fwrite(char);                                                  _anshen // link: faster write
_anshen void fwrite(char*);                                                 _anshen // link: faster write
_anshen void fwrite(const char*);                                           _anshen // link: faster write
_anshen void fflush();                                                      _anshen // link: faster write flush out
_anshen void swrite(int);                                                   _anshen // link: iostream faster write
_anshen void swrite(long);                                                  _anshen // link: iostream faster write
_anshen void swrite(short);                                                 _anshen // link: iostream faster write
_anshen void swrite(long long);                                             _anshen // link: iostream faster write
_anshen void swrite(unsigned int);                                          _anshen // link: iostream faster write
_anshen void swrite(unsigned long);                                         _anshen // link: iostream faster write
_anshen void swrite(unsigned short);                                        _anshen // link: iostream faster write
_anshen void swrite(unsigned long long);                                    _anshen // link: iostream faster write
_anshen void swrite(float);                                                 _anshen // link: iostream faster write
_anshen void swrite(double);                                                _anshen // link: iostream faster write
_anshen void swrite(__float128);                                            _anshen // link: iostream faster write
_anshen void swrite(long double);                                           _anshen // link: iostream faster write
_anshen void swrite(char);                                                  _anshen // link: iostream faster write
_anshen void swrite(char*);                                                 _anshen // link: iostream faster write
_anshen void swrite(const char*);                                           _anshen // link: iostream faster write
_anshen void sflush();                                                      _anshen // link: iostream faster write flush out
_anshen }                                                                   _anshen // end of link anshenc++lib-func
_anshen struct baseio {                                                     _anshen // start class anshenio
_anshen template <class T>                                                  _anshen // anshenio reader-tool's template part
_anshen baseio& operator>>(T &Dat) {                                        _anshen // anshenio multi-reader opt >>
        read(Dat);
_anshen return *this;                                                       _anshen // anshenio multi-reader next
_anshen }                                                                   _anshen // end of func
_anshen template <class T>                                                  _anshen // anshenio reader-tool's template part
_anshen baseio& operator<<(T  Dat) {                                        _anshen // anshenio multi-writer opt <<
        write(Dat);
_anshen return *this;                                                       _anshen // anshenio multi-writer next
_anshen }                                                                   _anshen // end of func
_anshen template <class T>                                                  _anshen // anshenio fast-reader-tool's template part
_anshen baseio& operator>=(T &Dat) {                                        _anshen // anshenio fast-multi-reader opt >=
        fread(Dat);
_anshen return *this;                                                       _anshen // anshenio fast-multi-reader next
_anshen }                                                                   _anshen // end of func
_anshen template <class T>                                                  _anshen // anshenio fast-reader-tool's template part
_anshen baseio& operator<=(T  Dat) {                                        _anshen // anshenio fast-multi-writer opt <=
        fwrite(Dat);
_anshen return *this;                                                       _anshen // anshenio fast-multi-writer next
_anshen }                                                                   _anshen // end of func
_anshen template <class T>                                                  _anshen // anshenio ios fast-reader-tool's template part
_anshen baseio& operator[](T &Dat) {                                        _anshen // anshenio ios fast-multi-reader opt []
        sread(Dat);
_anshen return *this;                                                       _anshen // anshenio ios fast-multi-reader next
_anshen }                                                                   _anshen // end of func
_anshen template <class T>                                                  _anshen // anshenio ios fast-reader-tool's template part
_anshen baseio& operator()(T  Dat) {                                        _anshen // anshenio ios fast-multi-writer opt ()
        swrite(Dat);
_anshen return *this;                                                       _anshen // anshenio fast-multi-writer next
_anshen }                                                                   _anshen // end of func
_anshen } io;                                                               _anshen // end of class anshenio
#define baseio                                                              _anshen // can't use this class-type
_anshen }                                                                   _anshen // end of anshenc++lib-extend
#undef  _anshen
#endif